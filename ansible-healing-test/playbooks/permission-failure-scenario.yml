---
# Permission and File System Failure Scenario
# This playbook tries operations that will fail due to permissions
- name: Permission Failure Test
  hosts: all_servers
  gather_facts: yes

  tasks:
    - name: Try to write to protected directory without sudo (WILL FAIL)
      file:
        path: /etc/test-file-no-permission
        state: touch
        owner: root
        group: root
        mode: '0644'
      register: permission_result
      failed_when: false
      become: no  # Intentionally no sudo
      tags: [permission_failure]

    - name: Show permission failure result
      debug:
        var: permission_result
      tags: [permission_failure]

    - name: Try to create file with non-existent user (WILL FAIL)
      file:
        path: /tmp/test-file-bad-owner
        state: touch
        owner: "nonexistent-user"
        group: "nonexistent-group"
      register: bad_owner_result
      failed_when: false
      become: yes
      tags: [bad_owner]

    - name: Show bad owner result
      debug:
        var: bad_owner_result
      tags: [bad_owner]

    - name: Try to access non-existent directory (WILL FAIL)
      file:
        path: /totally/fake/directory/that/does/not/exist/file.txt
        state: touch
      register: bad_path_result
      failed_when: false
      become: yes
      tags: [bad_path]

    - name: Show bad path result
      debug:
        var: bad_path_result
      tags: [bad_path]

    - name: Try to copy file that doesn't exist (WILL FAIL)
      copy:
        src: /nonexistent/source/file.txt
        dest: /tmp/copied-file.txt
      register: copy_failure_result
      failed_when: false
      tags: [copy_failure]

    - name: Show copy failure result
      debug:
        var: copy_failure_result
      tags: [copy_failure]
